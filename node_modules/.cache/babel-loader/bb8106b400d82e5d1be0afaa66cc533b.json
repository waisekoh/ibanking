{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\FinTech\\\\Dev 1\\\\day2\\\\Final_Assignment\\\\src\\\\App.js\";\n\n/* Demo for FinTech@SG Course \nGeneration of Charts Based on JSON data from Server\nAuthor: Prof Bhojan Anand */\n//Install d3.js:   npm install d3 --save\nimport React from \"react\";\nimport logo from \"./brand-logo.png\";\nimport * as d3 from 'd3';\nimport \"./App.css\";\n\nfunction sortTable(n) {\n  var table,\n      rows,\n      switching,\n      i,\n      x,\n      y,\n      shouldSwitch,\n      dir,\n      switchcount = 0;\n  table = document.getElementById(\"myTable\");\n  switching = true; //Set the sorting direction to ascending:\n\n  dir = \"asc\";\n  /*Make a loop that will continue until\n  no switching has been done:*/\n\n  while (switching) {\n    //start by saying: no switching is done:\n    switching = false;\n    rows = table.rows;\n    /*Loop through all table rows (except the\n    first, which contains table headers):*/\n\n    for (i = 1; i < rows.length - 1; i++) {\n      //start by saying there should be no switching:\n      shouldSwitch = false;\n      /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n\n      x = rows[i].getElementsByTagName(\"TD\")[n];\n      y = rows[i + 1].getElementsByTagName(\"TD\")[n];\n      /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n\n      if (dir == \"asc\") {\n        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n          //if so, mark as a switch and break the loop:\n          shouldSwitch = true;\n          break;\n        }\n      } else if (dir == \"desc\") {\n        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n          //if so, mark as a switch and break the loop:\n          shouldSwitch = true;\n          break;\n        }\n      }\n    }\n\n    if (shouldSwitch) {\n      /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\n      switching = true; //Each time a switch is done, increase this count by 1:\n\n      switchcount++;\n    } else {\n      /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n      if (switchcount == 0 && dir == \"asc\") {\n        dir = \"desc\";\n        switching = true;\n      }\n    }\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accounts: [],\n      customers: [],\n      transactions: [],\n      credit: []\n    };\n  }\n\n  callAPIServer() {\n    // when component mounted, start a GET request\n    // to specified URL\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/accounts\").then(res => res.text()).then(res => this.setState({\n      accounts: JSON.parse(res)\n    })).catch(err => err);\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/customers\") // when we get a response map the body to json\n    .then(res => res.text()).then(res => this.setState({\n      customers: JSON.parse(res)\n    })).catch(err => err);\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/transactions\") // when we get a response map the body to json\n    .then(res => res.text()).then(res => this.setState({\n      transactions: JSON.parse(res)\n    })).catch(err => err);\n    this.state.credit = new Array();\n    console.log(\"HIHIHIHIHIHIHIH\");\n    console.log(this.state.credit);\n    this.state.credit.push({\n      account: \"credit\",\n      clothing: \"0\",\n      utilities: \"0\",\n      recreation: \"0\",\n      groceries: \"0\",\n      salary: \"0\",\n      housing: \"0\",\n      insurance: \"0\"\n    }, {\n      account: \"cheque\",\n      clothing: \"0\",\n      utilities: \"0\",\n      recreation: \"0\",\n      groceries: \"0\",\n      salary: \"0\",\n      housing: \"0\",\n      insurance: \"0\"\n    }, {\n      account: \"savings\",\n      clothing: \"0\",\n      utilities: \"0\",\n      recreation: \"0\",\n      groceries: \"0\",\n      salary: \"0\",\n      housing: \"0\",\n      insurance: \"0\"\n    });\n    console.log(\"BYEBYEBYEBYEYBEYBEYBY\");\n    console.log(this.state.credit);\n  }\n\n  componentDidMount() {\n    // react lifecycle method componentDidMount()\n    //will execute the callAPIserver() method after the component mounts.\n    this.callAPIServer();\n  }\n\n  componentDidUpdate() {\n    /* prepare data */\n    console.log(this.state.accounts);\n    this.state.accounts.forEach(function (c) {\n      c.balance = c.balance.replace(/[^0-9.-]+/g, \"\"); //regular expression to convert currency to Numeric form\n\n      console.log(c.balance);\n      console.log(c.account);\n    });\n    console.log(this.state.accounts);\n    this.state.transactions.forEach(function (b) {\n      b.amount = b.amount.replace(/[^0-9.-]+/g, \"\"); //regular expression to convert currency to Numeric form\n    });\n    this.generateGraph(); //based on previous d3.js exampls\n\n    this.showChart(); //improved version way to chart\n\n    this.tabling();\n    this.tabling1();\n  }\n\n  tabling() {\n    var tcredit = [];\n    var count = 0;\n    this.state.transactions.forEach(function (a) {\n      if (a.account == \"credit\") {\n        tcredit[count] = new Array(a.timestamp, a.category, a.account, a.amount);\n        count++;\n      }\n    });\n    console.log(tcredit);\n    var tsavings = [];\n    var count = 0;\n    this.state.transactions.forEach(function (a) {\n      if (a.account == \"savings\") {\n        tsavings[count] = new Array(a.timestamp, a.category, a.account, a.amount);\n        count++;\n      }\n    });\n    console.log(tsavings);\n    var tcheque = [];\n    var count = 0;\n    this.state.transactions.forEach(function (a) {\n      if (a.account == \"cheque\") {\n        tcheque[count] = new Array(a.timestamp, a.category, a.account, a.amount);\n        count++;\n      }\n    });\n    console.log(tcheque);\n    /*\n    var tfinal = [{account: \"cheque\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}, {account: \"credit\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}, {account: \"savings\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}];\n    \n    var a = tcredit[0][3];\n    console.log(a);\n      //console.log(tcredit[0][3]);\n    console.log(Number(tfinal[1].tcredit[0][2]));\n    \n    for(var i=0; i<tcredit.length ;i++){\n      var num = \n      Number(tfinal[1].tcredit[i][2]) \n      + Number(tcredit[i][3]);\n      tfinal[1].tcredit[i][2] = num.toString();\n    }\n    for(var i=0; i<tcheque.length ;i++){\n      var num = Number(tfinal[0].tcheque[i][2]) + tcheque[i][3];\n      tfinal[0].tcheque[i][2] = num.toString();\n    }\n    for(var i=0; i<tsavings.length ;i++){\n      var num = Number(tfinal[2].tsavings[i][2]) + tsavings[i][3];\n      tfinal[2].tsavings[i][2] = num.toString();\n    }\n    console.log(tfinal);\n    */\n  }\n\n  tabling1() {}\n\n  showChart() {\n    const margin = {\n      top: 50,\n      right: 50,\n      bottom: 50,\n      left: 50\n    };\n    var width = 1000 - margin.left - margin.right;\n    var height = 500 - margin.top - margin.bottom;\n    var svg = d3.select(\"#barChart\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    svg.selectAll(\"*\").remove();\n    var x = d3.scaleBand().range([0, width]);\n    var y = d3.scaleLinear().range([height, 0]);\n    x.domain(this.state.accounts.map(details => details.account));\n    y.domain([0, d3.max(this.state.accounts.map(details => details.balance))]);\n    svg.selectAll(\".bar\").data(this.state.accounts).enter().append(\"rect\").attr(\"class\", \"bar\").attr(\"x\", d => x(d.account)).attr(\"width\", x.bandwidth() - 10).attr(\"y\", d => y(d.balance)).attr(\"height\", d => height - y(d.balance));\n    svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x));\n    svg.append(\"g\").call(d3.axisLeft(y));\n  }\n\n  generateGraph() {\n    var maxVal = d3.max(this.state.accounts.map(details => Number(details.balance)));\n    console.log(maxVal);\n    var svg = d3.select(\"#visualisation\").append(\"svg\").attr(\"width\", 500).attr(\"height\", 200);\n    svg.selectAll(\"rect\").data(this.state.accounts).enter().append(\"rect\").attr(\"transform\", function (d, i) {\n      return \"translate(\" + 60 + \",\" + i * 25 + \")\";\n    }).attr(\"fill\", \"blue\").attr(\"height\", 20).attr(\"width\", function (d) {\n      return d.balance / maxVal * 500 + \"px\";\n    });\n    svg.selectAll(\"text\").data(this.state.accounts).enter().append(\"text\").attr(\"transform\", function (d, i) {\n      return \"translate(0,\" + Number(i * 25 + 15) + \")\";\n    }).attr(\"fill\", \"red\").text(function (d) {\n      return d.account;\n    });\n  }\n\n  render() {\n    var x = tcredit[0][3];\n    console.log(\"this is amount spent on housing\" + x);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"App-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }\n    }, \"NUSmoney App+\")), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }\n    }, \" Accounts \"), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"myTable\",\n      id: \"A\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }\n    }, \"Account Type\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }\n    }, \"Balance\")), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }\n    }, this.state.accounts.map(item => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 17\n        }\n      }, \" \", item.account, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 17\n        }\n      }, \" \", item.balance, \" \"));\n    }))), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }\n    }, \" Customers \"), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"myTable\",\n      id: \"C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }\n    }, \"Gender\")), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }\n    }, this.state.customers.map(item => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 19\n        }\n      }, \" \", item.first_name, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 19\n        }\n      }, \" \", item.last_name, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 19\n        }\n      }, \" \", item.email, \"  \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 19\n        }\n      }, \" \", item.gender, \" \"));\n    }))), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }\n    }, \" Transactions \"), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"myTable\",\n      id: \"T\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }\n    }, \"Account Type\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }\n    }, \"Amount Transacted\")), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }\n    }, this.state.transactions.map(item => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.transaction_id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 19\n        }\n      }, \" \", item.timestamp, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 19\n        }\n      }, \" \", item.category, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 19\n        }\n      }, \" \", item.account, \"  \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 19\n        }\n      }, \" \", item.amount, \" \"));\n    }))), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }\n    }, \" Visualisation of Accounts\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"visualisation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      id: \"barChart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/FinTech/Dev 1/day2/Final_Assignment/src/App.js"],"names":["React","logo","d3","sortTable","n","table","rows","switching","i","x","y","shouldSwitch","dir","switchcount","document","getElementById","length","getElementsByTagName","innerHTML","toLowerCase","parentNode","insertBefore","App","Component","constructor","props","state","accounts","customers","transactions","credit","callAPIServer","fetch","then","res","text","setState","JSON","parse","catch","err","Array","console","log","push","account","clothing","utilities","recreation","groceries","salary","housing","insurance","componentDidMount","componentDidUpdate","forEach","c","balance","replace","b","amount","generateGraph","showChart","tabling","tabling1","tcredit","count","a","timestamp","category","tsavings","tcheque","margin","top","right","bottom","left","width","height","svg","select","attr","append","selectAll","remove","scaleBand","range","scaleLinear","domain","map","details","max","data","enter","d","bandwidth","call","axisBottom","axisLeft","maxVal","Number","render","item","id","first_name","last_name","email","gender","transaction_id"],"mappings":"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","sourcesContent":["/* Demo for FinTech@SG Course \nGeneration of Charts Based on JSON data from Server\nAuthor: Prof Bhojan Anand */\n//Install d3.js:   npm install d3 --save\nimport React from \"react\";\nimport logo from \"./brand-logo.png\";\nimport * as d3 from 'd3';\n\nimport \"./App.css\";\n\n\nfunction sortTable(n) {\n  var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;\n  table = document.getElementById(\"myTable\");\n  switching = true;\n  //Set the sorting direction to ascending:\n  dir = \"asc\"; \n  /*Make a loop that will continue until\n  no switching has been done:*/\n  while (switching) {\n    //start by saying: no switching is done:\n    switching = false;\n    rows = table.rows;\n    /*Loop through all table rows (except the\n    first, which contains table headers):*/\n    for (i = 1; i < (rows.length - 1); i++) {\n      //start by saying there should be no switching:\n      shouldSwitch = false;\n      /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n      x = rows[i].getElementsByTagName(\"TD\")[n];\n      y = rows[i + 1].getElementsByTagName(\"TD\")[n];\n      /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n      if (dir == \"asc\") {\n        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n          //if so, mark as a switch and break the loop:\n          shouldSwitch= true;\n          break;\n        }\n      } else if (dir == \"desc\") {\n        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n          //if so, mark as a switch and break the loop:\n          shouldSwitch = true;\n          break;\n        }\n      }\n    }\n    if (shouldSwitch) {\n      /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\n      switching = true;\n      //Each time a switch is done, increase this count by 1:\n      switchcount ++;      \n    } else {\n      /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n      if (switchcount == 0 && dir == \"asc\") {\n        dir = \"desc\";\n        switching = true;\n      }\n    }\n  }\n}\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      accounts: [],\n      customers: [],\n      transactions: [],\n      credit: []\n     }\n \n  }\n\n  callAPIServer() {\n    // when component mounted, start a GET request\n    // to specified URL\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/accounts\")\n      .then(res => res.text())\n      .then(res => this.setState({ accounts: JSON.parse(res) }))\n      .catch(err => err);\n\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/customers\")\n      // when we get a response map the body to json\n      .then(res => res.text())\n      .then(res => this.setState({ customers: JSON.parse(res) }))\n      .catch(err => err);\n\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/transactions\")\n      // when we get a response map the body to json\n      .then(res => res.text())\n      .then(res => this.setState({ transactions: JSON.parse(res) }))\n      .catch(err => err);\n    \n     this.state.credit = new Array(); \n     console.log(\"HIHIHIHIHIHIHIH\");\n     console.log(this.state.credit);\n     this.state.credit.push({account: \"credit\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"},{account: \"cheque\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}, {account: \"savings\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"});\n     console.log(\"BYEBYEBYEBYEYBEYBEYBY\");\n     console.log(this.state.credit);\n\n    }\n  \n  componentDidMount() {\n    // react lifecycle method componentDidMount()\n    //will execute the callAPIserver() method after the component mounts.\n    this.callAPIServer();\n  }\n \n\n componentDidUpdate() {\n  \n  /* prepare data */\n  console.log(this.state.accounts);\n  this.state.accounts.forEach(function (c) {\n    c.balance = c.balance.replace(/[^0-9.-]+/g,\"\"); //regular expression to convert currency to Numeric form\n    console.log(c.balance); \n    console.log(c.account);\n  });\n  console.log(this.state.accounts);\n\n  this.state.transactions.forEach(function (b) {\n    b.amount = b.amount.replace(/[^0-9.-]+/g,\"\"); //regular expression to convert currency to Numeric form\n  });\n  \n  \n  this.generateGraph();  //based on previous d3.js exampls\n  this.showChart();  //improved version way to chart\n  this.tabling();\n  this.tabling1();\n}\n\ntabling(){\n\n  var tcredit = [];\n  var count = 0;\n  this.state.transactions.forEach(function(a){\n    if(a.account== \"credit\"){\n      tcredit[count] = new Array(a.timestamp, a.category, a.account, a.amount);\n      count++;\n  }\n  });\n  console.log(tcredit);\n\n  var tsavings = [];\n  var count = 0;\n  this.state.transactions.forEach(function(a){\n    if(a.account== \"savings\"){\n      tsavings[count] = new Array(a.timestamp, a.category, a.account, a.amount);\n      count++;\n  }\n  });\n  console.log(tsavings); \n\n  var tcheque = [];\n  var count = 0;\n  this.state.transactions.forEach(function(a){\n    if(a.account== \"cheque\"){\n      tcheque[count] = new Array(a.timestamp, a.category, a.account, a.amount);\n      count++;\n  }\n  });\n  console.log(tcheque); \n\n  /*\n  var tfinal = [{account: \"cheque\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}, {account: \"credit\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}, {account: \"savings\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}];\n  \n  var a = tcredit[0][3];\n  console.log(a);\n    //console.log(tcredit[0][3]);\n  console.log(Number(tfinal[1].tcredit[0][2]));\n  \n  for(var i=0; i<tcredit.length ;i++){\n    var num = \n    Number(tfinal[1].tcredit[i][2]) \n    + Number(tcredit[i][3]);\n    tfinal[1].tcredit[i][2] = num.toString();\n  }\n  for(var i=0; i<tcheque.length ;i++){\n    var num = Number(tfinal[0].tcheque[i][2]) + tcheque[i][3];\n    tfinal[0].tcheque[i][2] = num.toString();\n  }\n  for(var i=0; i<tsavings.length ;i++){\n    var num = Number(tfinal[2].tsavings[i][2]) + tsavings[i][3];\n    tfinal[2].tsavings[i][2] = num.toString();\n  }\n  console.log(tfinal);\n\n*/\n\n}\n\ntabling1(){\n\n\n\n}\n\n\nshowChart() {\n\n  \n  const margin = { top: 50, right: 50, bottom: 50, left: 50 };\n  var width = 1000 - margin.left - margin.right;\n  var height = 500 - margin.top - margin.bottom;\n  var svg = d3.select(\"#barChart\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n  \n  svg.selectAll(\"*\").remove();\n\n  var x = d3.scaleBand().range([0, width]);\n  var y = d3.scaleLinear().range([height, 0]);\n\n  x.domain(this.state.accounts.map(details => details.account));\n  y.domain([0, d3.max(this.state.accounts.map(details => details.balance))]);\n\n\n\n  svg.selectAll(\".bar\")\n    .data(this.state.accounts)\n    .enter()\n    .append(\"rect\")\n    .attr(\"class\", \"bar\")\n    .attr(\"x\", d => x(d.account))\n    .attr(\"width\", x.bandwidth() - 10)\n    .attr(\"y\", d => y(d.balance))\n    .attr(\"height\", d => height - y(d.balance));\n\n  svg.append(\"g\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.axisBottom(x))\n\n  svg.append(\"g\")\n    .call(d3.axisLeft(y));\n}\n\n  generateGraph() {\n\n    var maxVal = d3.max(this.state.accounts.map(details => Number(details.balance)));\n    console.log(maxVal);\n    var svg = d3\n      .select(\"#visualisation\")\n      .append(\"svg\")\n      .attr(\"width\", 500)\n      .attr(\"height\", 200);\n\n    svg\n      .selectAll(\"rect\")\n      .data(this.state.accounts)\n      .enter()\n      .append(\"rect\")\n      .attr(\"transform\", function (d, i) {\n        return \"translate(\" + 60 + \",\" + i * 25 + \")\";\n      })\n      .attr(\"fill\", \"blue\")\n      .attr(\"height\", 20)\n      .attr(\"width\", function (d) {\n        return d.balance /maxVal * 500 + \"px\";\n      });\n      \n    svg\n      .selectAll(\"text\")\n      .data(this.state.accounts)\n      .enter()\n      .append(\"text\")\n      .attr(\"transform\", function (d, i) {\n        return \"translate(0,\" + Number(i * 25 + 15) + \")\";\n      })\n      .attr(\"fill\", \"red\")\n      .text(function (d) {\n        return d.account;\n      });\n      \n  \n  } \n\n  \n\n\n\n  render() {\n\n    var x = tcredit[0][3];\n    console.log(\"this is amount spent on housing\" + x);\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">NUSmoney App+</h1>\n        </header>\n\n        <h2> Accounts </h2>\n        <table className=\"myTable\"  id=\"A\">\n        <tr>\n        <th  >Account Type</th>\n        <th   >Balance</th>\n      </tr>\n          <tbody>\n          {this.state.accounts.map((item) => {\n            return (\n              <tr key={item.id}>\n                <td> {item.account} </td>\n                <td> {item.balance} </td>\n              </tr>\n            );\n          })}\n          </tbody>\n        </table>\n\n\n        <h2> Customers </h2>    \n        <table className=\"myTable\"  id=\"C\">\n        <tr>\n        <th >First Name</th>\n        <th >Last Name</th>\n        <th >Email</th>\n        <th >Gender</th>\n      </tr>\n          <tbody>\n          {this.state.customers.map((item) => {\n            return (\n              <tr key={item.id}>\n                  <td> {item.first_name} </td>\n                  <td> {item.last_name} </td>\n                  <td> {item.email}  </td>\n                  <td> {item.gender} </td>\n              </tr>\n            );\n          })}\n          </tbody>\n        </table>\n\n        <h2> Transactions </h2>\n        <table className=\"myTable\" id=\"T\">\n        <tr>\n        <th >Date</th>\n        <th >Category</th>\n        <th >Account Type</th>\n        <th >Amount Transacted</th>\n      </tr>\n          <tbody>\n          {this.state.transactions.map((item) => {\n            return (\n              <tr key={item.transaction_id}>\n                  <td> {item.timestamp} </td>\n                  <td> {item.category} </td>\n                  <td> {item.account}  </td>\n                  <td> {item.amount} </td>\n              </tr>\n            );\n          })}\n          </tbody>\n        </table>\n\n\n        <h2> Visualisation of Accounts</h2>\n        <div id=\"visualisation\">\n            <svg id=\"barChart\"></svg>\n          </div>\n      </div>\n\n\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}