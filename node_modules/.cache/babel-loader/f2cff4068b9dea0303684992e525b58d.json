{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\FinTech\\\\Dev 1\\\\Day2\\\\Final_Assignment\\\\src\\\\App.js\";\n\n/* Demo for FinTech@SG Course \nGeneration of Charts Based on JSON data from Server\nAuthor: Prof Bhojan Anand */\n//Install d3.js:   npm install d3 --save\nimport React from \"react\";\nimport logo from \"./brand-logo.png\";\nimport * as d3 from 'd3';\nimport \"./App.css\";\n\nfunction sortTable(n) {\n  var table,\n      rows,\n      switching,\n      i,\n      x,\n      y,\n      shouldSwitch,\n      dir,\n      switchcount = 0;\n  table = document.getElementById(\"myTable\");\n  switching = true; //Set the sorting direction to ascending:\n\n  dir = \"asc\";\n  /*Make a loop that will continue until\n  no switching has been done:*/\n\n  while (switching) {\n    //start by saying: no switching is done:\n    switching = false;\n    rows = table.rows;\n    /*Loop through all table rows (except the\n    first, which contains table headers):*/\n\n    for (i = 1; i < rows.length - 1; i++) {\n      //start by saying there should be no switching:\n      shouldSwitch = false;\n      /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n\n      x = rows[i].getElementsByTagName(\"TD\")[n];\n      y = rows[i + 1].getElementsByTagName(\"TD\")[n];\n      /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n\n      if (dir == \"asc\") {\n        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n          //if so, mark as a switch and break the loop:\n          shouldSwitch = true;\n          break;\n        }\n      } else if (dir == \"desc\") {\n        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n          //if so, mark as a switch and break the loop:\n          shouldSwitch = true;\n          break;\n        }\n      }\n    }\n\n    if (shouldSwitch) {\n      /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\n      switching = true; //Each time a switch is done, increase this count by 1:\n\n      switchcount++;\n    } else {\n      /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n      if (switchcount == 0 && dir == \"asc\") {\n        dir = \"desc\";\n        switching = true;\n      }\n    }\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accounts: [],\n      customers: [],\n      transactions: [],\n      tcredit: [],\n      tcheque: [],\n      tsavings: []\n    };\n  }\n\n  callAPIServer() {\n    // when component mounted, start a GET request\n    // to specified URL\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/accounts\").then(res => res.text()).then(res => this.setState({\n      accounts: JSON.parse(res)\n    })).catch(err => err);\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/customers\") // when we get a response map the body to json\n    .then(res => res.text()).then(res => this.setState({\n      customers: JSON.parse(res)\n    })).catch(err => err);\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/transactions\") // when we get a response map the body to json\n    .then(res => res.text()).then(res => this.setState({\n      transactions: JSON.parse(res)\n    })).catch(err => err);\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/transactions\") // when we get a response map the body to json\n    .then(res => res.text()).then(res => this.setState({\n      tcredit: JSON.parse(res)\n    })).catch(err => err);\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/transactions\") // when we get a response map the body to json\n    .then(res => res.text()).then(res => this.setState({\n      tcheque: JSON.parse(res)\n    })).catch(err => err);\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/transactions\") // when we get a response map the body to json\n    .then(res => res.text()).then(res => this.setState({\n      tsavings: JSON.parse(res)\n    })).catch(err => err);\n  }\n\n  componentDidMount() {\n    // react lifecycle method componentDidMount()\n    //will execute the callAPIserver() method after the component mounts.\n    this.callAPIServer();\n  }\n\n  componentDidUpdate() {\n    /* prepare data */\n    console.log(this.state.accounts);\n    this.state.accounts.forEach(function (c) {\n      c.balance = c.balance.replace(/[^0-9.-]+/g, \"\"); //regular expression to convert currency to Numeric form\n\n      console.log(c.balance);\n      console.log(c.account);\n    });\n    console.log(this.state.accounts);\n    this.state.transactions.forEach(function (b) {\n      b.amount = b.amount.replace(/[^0-9.-]+/g, \"\"); //regular expression to convert currency to Numeric form\n    });\n    this.generateGraph(); //based on previous d3.js exampls\n\n    this.showChart(); //improved version way to chart\n  }\n\n  editlist() {\n    const creditlist = [...this.state.tcredit];\n    const updatedlist = new Array();\n    creditlist.forEach(function (item) {\n      if (item.account == \"credit\") {\n        updatedlist.push(item);\n      }\n    });\n    this.setState({\n      tcredit: updatedlist\n    });\n  }\n\n  tabling() {\n    var tcredit = [];\n    var count = 0;\n    this.state.transactions.forEach(function (a) {\n      if (a.account == \"credit\") {\n        tcredit[count] = new Array(a.timestamp, a.category, a.account, a.amount);\n        count++;\n      }\n    });\n    console.log(tcredit);\n    var tsavings = [];\n    var count = 0;\n    this.state.transactions.forEach(function (a) {\n      if (a.account == \"savings\") {\n        tsavings[count] = new Array(a.timestamp, a.category, a.account, a.amount);\n        count++;\n      }\n    });\n    console.log(tsavings);\n    var tcheque = [];\n    var count = 0;\n    this.state.transactions.forEach(function (a) {\n      if (a.account == \"cheque\") {\n        tcheque[count] = new Array(a.timestamp, a.category, a.account, a.amount);\n        count++;\n      }\n    });\n    console.log(tcheque);\n    /*\n      console.log(\"HIHIHIHIHIHIHIH\");\n      console.log(this.state.final);\n    \n      //let a = this.state.final.concat({account: \"credit\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"});\n      //a.push({account: \"credit\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"},{account: \"cheque\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}, {account: \"savings\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}); \n      this.setState({final: [...this.state.final, ...[1,2,3]]});\n    \n      //this.state.final.push({account: \"credit\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"},{account: \"cheque\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}, {account: \"savings\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"});\n      \n      console.log(\"BYEBYEBYEBYEYBEYBEYBY\");\n      console.log(this.state.final);\n    */\n\n    /*\n      var x = this.state.tcredit[0][3];\n      console.log(\"this is amount spent on housing\" + x);\n    \n      \n      var tfinal = [{account: \"cheque\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}, {account: \"credit\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}, {account: \"savings\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}];\n      \n      var a = tcredit[0][3];\n      console.log(a);\n        //console.log(tcredit[0][3]);\n      console.log(Number(tfinal[1].tcredit[0][2]));\n      \n      for(var i=0; i<tcredit.length ;i++){\n        var num = \n        Number(tfinal[1].tcredit[i][2]) \n        + Number(tcredit[i][3]);\n        tfinal[1].tcredit[i][2] = num.toString();\n      }\n      for(var i=0; i<tcheque.length ;i++){\n        var num = Number(tfinal[0].tcheque[i][2]) + tcheque[i][3];\n        tfinal[0].tcheque[i][2] = num.toString();\n      }\n      for(var i=0; i<tsavings.length ;i++){\n        var num = Number(tfinal[2].tsavings[i][2]) + tsavings[i][3];\n        tfinal[2].tsavings[i][2] = num.toString();\n      }\n      console.log(tfinal);\n    \n    */\n  }\n\n  showChart() {\n    const margin = {\n      top: 50,\n      right: 50,\n      bottom: 50,\n      left: 50\n    };\n    var width = 1000 - margin.left - margin.right;\n    var height = 500 - margin.top - margin.bottom;\n    var svg = d3.select(\"#barChart\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    svg.selectAll(\"*\").remove();\n    var x = d3.scaleBand().range([0, width]);\n    var y = d3.scaleLinear().range([height, 0]);\n    x.domain(this.state.accounts.map(details => details.account));\n    y.domain([0, d3.max(this.state.accounts.map(details => details.balance))]);\n    svg.selectAll(\".bar\").data(this.state.accounts).enter().append(\"rect\").attr(\"class\", \"bar\").attr(\"x\", d => x(d.account)).attr(\"width\", x.bandwidth() - 10).attr(\"y\", d => y(d.balance)).attr(\"height\", d => height - y(d.balance));\n    svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x));\n    svg.append(\"g\").call(d3.axisLeft(y));\n  }\n\n  generateGraph() {\n    var maxVal = d3.max(this.state.accounts.map(details => Number(details.balance)));\n    console.log(maxVal);\n    var svg = d3.select(\"#visualisation\").append(\"svg\").attr(\"width\", 500).attr(\"height\", 200);\n    svg.selectAll(\"rect\").data(this.state.accounts).enter().append(\"rect\").attr(\"transform\", function (d, i) {\n      return \"translate(\" + 60 + \",\" + i * 25 + \")\";\n    }).attr(\"fill\", \"blue\").attr(\"height\", 20).attr(\"width\", function (d) {\n      return d.balance / maxVal * 500 + \"px\";\n    });\n    svg.selectAll(\"text\").data(this.state.accounts).enter().append(\"text\").attr(\"transform\", function (d, i) {\n      return \"translate(0,\" + Number(i * 25 + 15) + \")\";\n    }).attr(\"fill\", \"red\").text(function (d) {\n      return d.account;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"App-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }\n    }, \"NUSmoney App+\")), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }\n    }, \" Accounts \"), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"myTable\",\n      id: \"A\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }\n    }, \"Account Type\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }\n    }, \"Balance\")), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }\n    }, this.state.accounts.map(item => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 17\n        }\n      }, \" \", item.account, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 17\n        }\n      }, \" \", item.balance, \" \"));\n    }))), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }\n    }, \" Customers \"), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"myTable\",\n      id: \"C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }\n    }, \"Gender\")), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }\n    }, this.state.customers.map(item => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 19\n        }\n      }, \" \", item.first_name, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 19\n        }\n      }, \" \", item.last_name, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 19\n        }\n      }, \" \", item.email, \"  \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 19\n        }\n      }, \" \", item.gender, \" \"));\n    }))), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }\n    }, \" Transactions \"), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"myTable\",\n      id: \"T\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 13\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 13\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 13\n      }\n    }, \"Account Type\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 13\n      }\n    }, \"Amount Transacted\")), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 11\n      }\n    }, this.state.transactions.map(item => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.transaction_id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 21\n        }\n      }, \" \", item.timestamp, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 21\n        }\n      }, \" \", item.category, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 21\n        }\n      }, \" \", item.account, \"  \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 21\n        }\n      }, \" \", item.amount, \" \"));\n    }))), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }\n    }, \" Visualisation of Accounts\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"visualisation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      id: \"barChart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/FinTech/Dev 1/Day2/Final_Assignment/src/App.js"],"names":["React","logo","d3","sortTable","n","table","rows","switching","i","x","y","shouldSwitch","dir","switchcount","document","getElementById","length","getElementsByTagName","innerHTML","toLowerCase","parentNode","insertBefore","App","Component","constructor","props","state","accounts","customers","transactions","tcredit","tcheque","tsavings","callAPIServer","fetch","then","res","text","setState","JSON","parse","catch","err","componentDidMount","componentDidUpdate","console","log","forEach","c","balance","replace","account","b","amount","generateGraph","showChart","editlist","creditlist","updatedlist","Array","item","push","tabling","count","a","timestamp","category","margin","top","right","bottom","left","width","height","svg","select","attr","append","selectAll","remove","scaleBand","range","scaleLinear","domain","map","details","max","data","enter","d","bandwidth","call","axisBottom","axisLeft","maxVal","Number","render","id","first_name","last_name","email","gender","transaction_id"],"mappings":"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","sourcesContent":["/* Demo for FinTech@SG Course \nGeneration of Charts Based on JSON data from Server\nAuthor: Prof Bhojan Anand */\n//Install d3.js:   npm install d3 --save\nimport React from \"react\";\nimport logo from \"./brand-logo.png\";\nimport * as d3 from 'd3';\n\nimport \"./App.css\";\n\n\nfunction sortTable(n) {\n  var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;\n  table = document.getElementById(\"myTable\");\n  switching = true;\n  //Set the sorting direction to ascending:\n  dir = \"asc\"; \n  /*Make a loop that will continue until\n  no switching has been done:*/\n  while (switching) {\n    //start by saying: no switching is done:\n    switching = false;\n    rows = table.rows;\n    /*Loop through all table rows (except the\n    first, which contains table headers):*/\n    for (i = 1; i < (rows.length - 1); i++) {\n      //start by saying there should be no switching:\n      shouldSwitch = false;\n      /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n      x = rows[i].getElementsByTagName(\"TD\")[n];\n      y = rows[i + 1].getElementsByTagName(\"TD\")[n];\n      /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n      if (dir == \"asc\") {\n        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n          //if so, mark as a switch and break the loop:\n          shouldSwitch= true;\n          break;\n        }\n      } else if (dir == \"desc\") {\n        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n          //if so, mark as a switch and break the loop:\n          shouldSwitch = true;\n          break;\n        }\n      }\n    }\n    if (shouldSwitch) {\n      /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\n      switching = true;\n      //Each time a switch is done, increase this count by 1:\n      switchcount ++;      \n    } else {\n      /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n      if (switchcount == 0 && dir == \"asc\") {\n        dir = \"desc\";\n        switching = true;\n      }\n    }\n  }\n}\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      accounts: [],\n      customers: [],\n      transactions: [],\n      tcredit: [],\n      tcheque: [],\n      tsavings: []\n     }\n \n  }\n\n  callAPIServer() {\n    // when component mounted, start a GET request\n    // to specified URL\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/accounts\")\n      .then(res => res.text())\n      .then(res => this.setState({ accounts: JSON.parse(res) }))\n      .catch(err => err);\n\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/customers\")\n      // when we get a response map the body to json\n      .then(res => res.text())\n      .then(res => this.setState({ customers: JSON.parse(res) }))\n      .catch(err => err);\n\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/transactions\")\n      // when we get a response map the body to json\n      .then(res => res.text())\n      .then(res => this.setState({ transactions: JSON.parse(res) }))\n      .catch(err => err);\n\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/transactions\")\n      // when we get a response map the body to json\n      .then(res => res.text())\n      .then(res => this.setState({ tcredit: JSON.parse(res) }))\n      .catch(err => err);\n\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/transactions\")\n      // when we get a response map the body to json\n      .then(res => res.text())\n      .then(res => this.setState({ tcheque: JSON.parse(res) }))\n      .catch(err => err);\n\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/transactions\")\n      // when we get a response map the body to json\n      .then(res => res.text())\n      .then(res => this.setState({ tsavings: JSON.parse(res) }))\n      .catch(err => err);\n    }\n  \n  componentDidMount() {\n    // react lifecycle method componentDidMount()\n    //will execute the callAPIserver() method after the component mounts.\n    this.callAPIServer();\n  }\n \n\n componentDidUpdate() {\n  \n  /* prepare data */\n  console.log(this.state.accounts);\n  this.state.accounts.forEach(function (c) {\n    c.balance = c.balance.replace(/[^0-9.-]+/g,\"\"); //regular expression to convert currency to Numeric form\n    console.log(c.balance); \n    console.log(c.account);\n  });\n  console.log(this.state.accounts);\n\n  this.state.transactions.forEach(function (b) {\n    b.amount = b.amount.replace(/[^0-9.-]+/g,\"\"); //regular expression to convert currency to Numeric form\n  });\n  \n\n  \n  this.generateGraph();  //based on previous d3.js exampls\n  this.showChart();  //improved version way to chart\n\n}\n\neditlist(){\n  const creditlist = [...this.state.tcredit];\n  const updatedlist = new Array();\n  creditlist.forEach(function(item){\n    if(item.account == \"credit\"){\n      updatedlist.push(item);\n    }\n  });\n  this.setState({tcredit: updatedlist});\n\n}\n\ntabling(){\n\n  var tcredit = [];\n  var count = 0;\n  this.state.transactions.forEach(function(a){\n    if(a.account== \"credit\"){\n      tcredit[count] = new Array(a.timestamp, a.category, a.account, a.amount);\n      count++;\n  }\n  });\n  console.log(tcredit);\n\n  var tsavings = [];\n  var count = 0;\n  this.state.transactions.forEach(function(a){\n    if(a.account== \"savings\"){\n      tsavings[count] = new Array(a.timestamp, a.category, a.account, a.amount);\n      count++;\n  }\n  });\n  console.log(tsavings); \n\n  var tcheque = [];\n  var count = 0;\n  this.state.transactions.forEach(function(a){\n    if(a.account== \"cheque\"){\n      tcheque[count] = new Array(a.timestamp, a.category, a.account, a.amount);\n      count++;\n  }\n  });\n  console.log(tcheque);   \n/*\n  console.log(\"HIHIHIHIHIHIHIH\");\n  console.log(this.state.final);\n\n  //let a = this.state.final.concat({account: \"credit\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"});\n  //a.push({account: \"credit\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"},{account: \"cheque\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}, {account: \"savings\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}); \n  this.setState({final: [...this.state.final, ...[1,2,3]]});\n\n  //this.state.final.push({account: \"credit\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"},{account: \"cheque\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}, {account: \"savings\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"});\n  \n  console.log(\"BYEBYEBYEBYEYBEYBEYBY\");\n  console.log(this.state.final);\n*/\n  \n/*\n  var x = this.state.tcredit[0][3];\n  console.log(\"this is amount spent on housing\" + x);\n\n  \n  var tfinal = [{account: \"cheque\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}, {account: \"credit\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}, {account: \"savings\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}];\n  \n  var a = tcredit[0][3];\n  console.log(a);\n    //console.log(tcredit[0][3]);\n  console.log(Number(tfinal[1].tcredit[0][2]));\n  \n  for(var i=0; i<tcredit.length ;i++){\n    var num = \n    Number(tfinal[1].tcredit[i][2]) \n    + Number(tcredit[i][3]);\n    tfinal[1].tcredit[i][2] = num.toString();\n  }\n  for(var i=0; i<tcheque.length ;i++){\n    var num = Number(tfinal[0].tcheque[i][2]) + tcheque[i][3];\n    tfinal[0].tcheque[i][2] = num.toString();\n  }\n  for(var i=0; i<tsavings.length ;i++){\n    var num = Number(tfinal[2].tsavings[i][2]) + tsavings[i][3];\n    tfinal[2].tsavings[i][2] = num.toString();\n  }\n  console.log(tfinal);\n\n*/\n\n}\n\nshowChart() {\n\n  \n  const margin = { top: 50, right: 50, bottom: 50, left: 50 };\n  var width = 1000 - margin.left - margin.right;\n  var height = 500 - margin.top - margin.bottom;\n  var svg = d3.select(\"#barChart\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n  \n  svg.selectAll(\"*\").remove();\n\n  var x = d3.scaleBand().range([0, width]);\n  var y = d3.scaleLinear().range([height, 0]);\n\n  x.domain(this.state.accounts.map(details => details.account));\n  y.domain([0, d3.max(this.state.accounts.map(details => details.balance))]);\n\n\n\n  svg.selectAll(\".bar\")\n    .data(this.state.accounts)\n    .enter()\n    .append(\"rect\")\n    .attr(\"class\", \"bar\")\n    .attr(\"x\", d => x(d.account))\n    .attr(\"width\", x.bandwidth() - 10)\n    .attr(\"y\", d => y(d.balance))\n    .attr(\"height\", d => height - y(d.balance));\n\n  svg.append(\"g\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.axisBottom(x))\n\n  svg.append(\"g\")\n    .call(d3.axisLeft(y));\n}\n\n  generateGraph() {\n\n    var maxVal = d3.max(this.state.accounts.map(details => Number(details.balance)));\n    console.log(maxVal);\n    var svg = d3\n      .select(\"#visualisation\")\n      .append(\"svg\")\n      .attr(\"width\", 500)\n      .attr(\"height\", 200);\n\n    svg\n      .selectAll(\"rect\")\n      .data(this.state.accounts)\n      .enter()\n      .append(\"rect\")\n      .attr(\"transform\", function (d, i) {\n        return \"translate(\" + 60 + \",\" + i * 25 + \")\";\n      })\n      .attr(\"fill\", \"blue\")\n      .attr(\"height\", 20)\n      .attr(\"width\", function (d) {\n        return d.balance /maxVal * 500 + \"px\";\n      });\n      \n    svg\n      .selectAll(\"text\")\n      .data(this.state.accounts)\n      .enter()\n      .append(\"text\")\n      .attr(\"transform\", function (d, i) {\n        return \"translate(0,\" + Number(i * 25 + 15) + \")\";\n      })\n      .attr(\"fill\", \"red\")\n      .text(function (d) {\n        return d.account;\n      });\n      \n  \n} \n\n\n  render() {\n\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">NUSmoney App+</h1>\n        </header>\n\n        <h2> Accounts </h2>\n        <table className=\"myTable\"  id=\"A\">\n        <tr>\n        <th  >Account Type</th>\n        <th   >Balance</th>\n      </tr>\n          <tbody>\n          {this.state.accounts.map((item) => {\n            return (\n              <tr key={item.id}>\n                <td> {item.account} </td>\n                <td> {item.balance} </td>\n              </tr>\n            );\n          })}\n          </tbody>\n        </table>\n\n\n        <h2> Customers </h2>    \n        <table className=\"myTable\"  id=\"C\">\n        <tr>\n        <th >First Name</th>\n        <th >Last Name</th>\n        <th >Email</th>\n        <th >Gender</th>\n      </tr>\n          <tbody>\n          {this.state.customers.map((item) => {\n            return (\n              <tr key={item.id}>\n                  <td> {item.first_name} </td>\n                  <td> {item.last_name} </td>\n                  <td> {item.email}  </td>\n                  <td> {item.gender} </td>\n              </tr>\n            );\n          })}\n          </tbody>\n        </table>\n\n        <h2> Transactions </h2>\n        <table className=\"myTable\" id=\"T\">\n          <tr>\n            <th >Date</th>\n            <th >Category</th>\n            <th >Account Type</th>\n            <th >Amount Transacted</th>\n          </tr>\n          <tbody>\n            {this.state.transactions.map((item) => {\n              return (\n                <tr key={item.transaction_id}>\n                    <td> {item.timestamp} </td>\n                    <td> {item.category} </td>\n                    <td> {item.account}  </td>\n                    <td> {item.amount} </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n\n\n        <h2> Visualisation of Accounts</h2>\n        <div id=\"visualisation\">\n            <svg id=\"barChart\"></svg>\n          </div>\n      </div>\n\n\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}