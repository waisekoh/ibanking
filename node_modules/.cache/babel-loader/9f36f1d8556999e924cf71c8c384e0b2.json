{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\FinTech\\\\Dev 1\\\\day2\\\\Final_Assignment\\\\src\\\\App.js\";\n\n/* Demo for FinTech@SG Course \nGeneration of Charts Based on JSON data from Server\nAuthor: Prof Bhojan Anand */\n//Install d3.js:   npm install d3 --save\nimport React from \"react\";\nimport logo from \"./brand-logo.png\";\nimport * as d3 from 'd3';\nimport \"./App.css\";\n\nfunction sortTable(n) {\n  var table,\n      rows,\n      switching,\n      i,\n      x,\n      y,\n      shouldSwitch,\n      dir,\n      switchcount = 0;\n  table = document.getElementById(\"myTable\");\n  switching = true; //Set the sorting direction to ascending:\n\n  dir = \"asc\";\n  /*Make a loop that will continue until\n  no switching has been done:*/\n\n  while (switching) {\n    //start by saying: no switching is done:\n    switching = false;\n    rows = table.rows;\n    /*Loop through all table rows (except the\n    first, which contains table headers):*/\n\n    for (i = 1; i < rows.length - 1; i++) {\n      //start by saying there should be no switching:\n      shouldSwitch = false;\n      /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n\n      x = rows[i].getElementsByTagName(\"TD\")[n];\n      y = rows[i + 1].getElementsByTagName(\"TD\")[n];\n      /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n\n      if (dir == \"asc\") {\n        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n          //if so, mark as a switch and break the loop:\n          shouldSwitch = true;\n          break;\n        }\n      } else if (dir == \"desc\") {\n        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n          //if so, mark as a switch and break the loop:\n          shouldSwitch = true;\n          break;\n        }\n      }\n    }\n\n    if (shouldSwitch) {\n      /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\n      switching = true; //Each time a switch is done, increase this count by 1:\n\n      switchcount++;\n    } else {\n      /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n      if (switchcount == 0 && dir == \"asc\") {\n        dir = \"desc\";\n        switching = true;\n      }\n    }\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accounts: [],\n      customers: [],\n      transactions: [],\n      tcredit: [],\n      tcheque: [],\n      tsavings: [],\n      fcredit: [],\n      fsavings: [],\n      fcheque: []\n    };\n  }\n\n  callAPIServer() {\n    // when component mounted, start a GET request\n    // to specified URL\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/accounts\").then(res => res.text()).then(res => this.setState({\n      accounts: JSON.parse(res)\n    })).catch(err => err);\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/customers\") // when we get a response map the body to json\n    .then(res => res.text()).then(res => this.setState({\n      customers: JSON.parse(res)\n    })).catch(err => err);\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/transactions\") // when we get a response map the body to json\n    .then(res => res.text()).then(res => this.setState({\n      transactions: JSON.parse(res)\n    })).catch(err => err);\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/transactions\") // when we get a response map the body to json\n    .then(res => res.text()).then(res => this.setState({\n      tcredit: JSON.parse(res)\n    })).catch(err => err);\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/transactions\") // when we get a response map the body to json\n    .then(res => res.text()).then(res => this.setState({\n      tcheque: JSON.parse(res)\n    })).catch(err => err);\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/transactions\") // when we get a response map the body to json\n    .then(res => res.text()).then(res => this.setState({\n      tsavings: JSON.parse(res)\n    })).catch(err => err);\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/transactions\") // when we get a response map the body to json\n    .then(res => res.text()).then(res => this.setState({\n      fcredit: JSON.parse(res)\n    })).catch(err => err);\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/transactions\") // when we get a response map the body to json\n    .then(res => res.text()).then(res => this.setState({\n      fcheque: JSON.parse(res)\n    })).catch(err => err);\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/transactions\") // when we get a response map the body to json\n    .then(res => res.text()).then(res => this.setState({\n      fsavings: JSON.parse(res)\n    })).catch(err => err);\n  }\n\n  componentDidMount() {\n    // react lifecycle method componentDidMount()\n    //will execute the callAPIserver() method after the component mounts.\n    this.callAPIServer();\n  }\n\n  componentDidUpdate() {\n    /* prepare data */\n    this.state.accounts.forEach(function (c) {\n      c.balance = c.balance.replace(/[^0-9.-]+/g, \"\"); //regular expression to convert currency to Numeric form\n    });\n    this.state.transactions.forEach(function (b) {\n      b.amount = b.amount.replace(/[^0-9.-]+/g, \"\"); //regular expression to convert currency to Numeric form\n    });\n    this.state.tcredit.forEach(function (b) {\n      b.amount = b.amount.replace(/[^0-9.-]+/g, \"\"); //regular expression to convert currency to Numeric form\n    });\n    this.state.tcheque.forEach(function (b) {\n      b.amount = b.amount.replace(/[^0-9.-]+/g, \"\"); //regular expression to convert currency to Numeric form\n    });\n    this.state.tsavings.forEach(function (b) {\n      b.amount = b.amount.replace(/[^0-9.-]+/g, \"\"); //regular expression to convert currency to Numeric form\n    });\n    this.generateGraph(); //based on previous d3.js exampls\n\n    this.showChart(); //improved version way to chart\n  }\n\n  editcreditlist() {\n    const creditlist = [...this.state.tcredit];\n    const updatedlist = new Array();\n    creditlist.forEach(function (item) {\n      if (item.account == \"credit\") {\n        updatedlist.push(item);\n      }\n    });\n    this.setState({\n      tcredit: updatedlist\n    });\n  }\n\n  newcreditlist() {\n    const creditlist = [...this.state.tcredit];\n    const updatedlist = [{\n      account: \"credit\",\n      clothing: \"0\",\n      utilities: \"0\",\n      recreation: \"0\",\n      groceries: \"0\",\n      salary: \"0\",\n      housing: \"0\",\n      insurance: \"0\"\n    }];\n    creditlist.forEach(function (item) {\n      if (item.category == \"clothing\") {\n        updatedlist[0].clothing = Number(updatedlist[0].clothing) + Number(item.amount);\n      } else if (item.category == \"utilities\") {\n        updatedlist[0].utilities = Number(updatedlist[0].utilities) + Number(item.amount);\n      } else if (item.category == \"recreation\") {\n        updatedlist[0].recreation = Number(updatedlist[0].recreation) + Number(item.amount);\n      } else if (item.category == \"groceries\") {\n        updatedlist[0].groceries = Number(updatedlist[0].groceries) + Number(item.amount);\n      } else if (item.category == \"salary\") {\n        updatedlist[0].salary = Number(updatedlist[0].salary) + Number(item.amount);\n      } else if (item.category == \"housing\") {\n        updatedlist[0].housing = Number(updatedlist[0].housing) + Number(item.amount);\n      } else if (item.category == \"insurance\") {\n        updatedlist[0].insurance = Number(updatedlist[0].insurance) + Number(item.amount);\n      }\n    });\n    this.setState({\n      fcredit: updatedlist\n    }); //for(var i=0; i<tcredit.length ;i++){\n    //  var num = Number(tfinal[1].tcredit[i][2]) + Number(tcredit[i][3]);\n    //}\n  }\n\n  editsavingslist() {\n    const creditlist = [...this.state.tsavings];\n    const updatedlist = new Array();\n    creditlist.forEach(function (item) {\n      if (item.account == \"savings\") {\n        updatedlist.push(item);\n      }\n    });\n    this.setState({\n      tsavings: updatedlist\n    });\n  }\n\n  editchequelist() {\n    const creditlist = [...this.state.tcheque];\n    const updatedlist = new Array();\n    creditlist.forEach(function (item) {\n      if (item.account == \"cheque\") {\n        updatedlist.push(item);\n      }\n    });\n    this.setState({\n      tcheque: updatedlist\n    });\n  }\n\n  tabling() {\n    var tcredit = [];\n    var count = 0;\n    this.state.transactions.forEach(function (a) {\n      if (a.account == \"credit\") {\n        tcredit[count] = new Array(a.timestamp, a.category, a.account, a.amount);\n        count++;\n      }\n    });\n    console.log(tcredit);\n    var tsavings = [];\n    var count = 0;\n    this.state.transactions.forEach(function (a) {\n      if (a.account == \"savings\") {\n        tsavings[count] = new Array(a.timestamp, a.category, a.account, a.amount);\n        count++;\n      }\n    });\n    console.log(tsavings);\n    var tcheque = [];\n    var count = 0;\n    this.state.transactions.forEach(function (a) {\n      if (a.account == \"cheque\") {\n        tcheque[count] = new Array(a.timestamp, a.category, a.account, a.amount);\n        count++;\n      }\n    });\n    console.log(tcheque);\n    /*\n      console.log(\"HIHIHIHIHIHIHIH\");\n      console.log(this.state.final);\n    \n      //let a = this.state.final.concat({account: \"credit\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"});\n      //a.push({account: \"credit\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"},{account: \"cheque\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}, {account: \"savings\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}); \n      this.setState({final: [...this.state.final, ...[1,2,3]]});\n    \n      //this.state.final.push({account: \"credit\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"},{account: \"cheque\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}, {account: \"savings\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"});\n      \n      console.log(\"BYEBYEBYEBYEYBEYBEYBY\");\n      console.log(this.state.final);\n    */\n\n    /*\n      var x = this.state.tcredit[0][3];\n      console.log(\"this is amount spent on housing\" + x);\n    \n      \n      var tfinal = [{account: \"cheque\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}, {account: \"credit\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}, {account: \"savings\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}];\n      \n      var a = tcredit[0][3];\n      console.log(a);\n        //console.log(tcredit[0][3]);\n      console.log(Number(tfinal[1].tcredit[0][2]));\n      \n      for(var i=0; i<tcredit.length ;i++){\n        var num = \n        Number(tfinal[1].tcredit[i][2]) \n        + Number(tcredit[i][3]);\n        tfinal[1].tcredit[i][2] = num.toString();\n      }\n      for(var i=0; i<tcheque.length ;i++){\n        var num = Number(tfinal[0].tcheque[i][2]) + tcheque[i][3];\n        tfinal[0].tcheque[i][2] = num.toString();\n      }\n      for(var i=0; i<tsavings.length ;i++){\n        var num = Number(tfinal[2].tsavings[i][2]) + tsavings[i][3];\n        tfinal[2].tsavings[i][2] = num.toString();\n      }\n      console.log(tfinal);\n    \n    */\n  }\n\n  showChart() {\n    const margin = {\n      top: 50,\n      right: 50,\n      bottom: 50,\n      left: 50\n    };\n    var width = 1000 - margin.left - margin.right;\n    var height = 500 - margin.top - margin.bottom;\n    var svg = d3.select(\"#barChart\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    svg.selectAll(\"*\").remove();\n    var x = d3.scaleBand().range([0, width]);\n    var y = d3.scaleLinear().range([height, 0]);\n    x.domain(this.state.accounts.map(details => details.account));\n    y.domain([0, d3.max(this.state.accounts.map(details => details.balance))]);\n    svg.selectAll(\".bar\").data(this.state.accounts).enter().append(\"rect\").attr(\"class\", \"bar\").attr(\"x\", d => x(d.account)).attr(\"width\", x.bandwidth() - 10).attr(\"y\", d => y(d.balance)).attr(\"height\", d => height - y(d.balance));\n    svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x));\n    svg.append(\"g\").call(d3.axisLeft(y));\n  }\n\n  generateGraph() {\n    var maxVal = d3.max(this.state.accounts.map(details => Number(details.balance)));\n    console.log(maxVal);\n    var svg = d3.select(\"#visualisation\").append(\"svg\").attr(\"width\", 500).attr(\"height\", 200);\n    svg.selectAll(\"rect\").data(this.state.accounts).enter().append(\"rect\").attr(\"transform\", function (d, i) {\n      return \"translate(\" + 60 + \",\" + i * 25 + \")\";\n    }).attr(\"fill\", \"blue\").attr(\"height\", 20).attr(\"width\", function (d) {\n      return d.balance / maxVal * 500 + \"px\";\n    });\n    svg.selectAll(\"text\").data(this.state.accounts).enter().append(\"text\").attr(\"transform\", function (d, i) {\n      return \"translate(0,\" + Number(i * 25 + 15) + \")\";\n    }).attr(\"fill\", \"red\").text(function (d) {\n      return d.account;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"App-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 11\n      }\n    }, \"NUSmoney App+\")), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }\n    }, \" Accounts \"), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"myTable\",\n      id: \"A\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }\n    }, \"Account Type\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }\n    }, \"Balance\")), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 11\n      }\n    }, this.state.accounts.map(item => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 17\n        }\n      }, \" \", item.account, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 17\n        }\n      }, \" \", item.balance, \" \"));\n    }))), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }\n    }, \" Customers \"), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"myTable\",\n      id: \"C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }\n    }, \"Gender\")), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 11\n      }\n    }, this.state.customers.map(item => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 19\n        }\n      }, \" \", item.first_name, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 19\n        }\n      }, \" \", item.last_name, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 19\n        }\n      }, \" \", item.email, \"  \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 19\n        }\n      }, \" \", item.gender, \" \"));\n    }))), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }\n    }, \" Transactions \"), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"myTable\",\n      id: \"T\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 13\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 13\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 13\n      }\n    }, \"Account Type\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 13\n      }\n    }, \"Amount Transacted\")), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 11\n      }\n    }, this.state.transactions.map(item => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.transaction_id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 21\n        }\n      }, \" \", item.timestamp, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 21\n        }\n      }, \" \", item.category, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 21\n        }\n      }, \" \", item.account, \"  \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 21\n        }\n      }, \" \", item.amount, \" \"));\n    }))), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }\n    }, \" Credit \"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: () => this.editcreditlist(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }\n    }, \"Update\"), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"myTable\",\n      id: \"T\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 13\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 13\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 13\n      }\n    }, \"Account Type\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 13\n      }\n    }, \"Amount Transacted\")), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 11\n      }\n    }, this.state.tcredit.map(item => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.transaction_id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 21\n        }\n      }, \" \", item.timestamp, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 21\n        }\n      }, \" \", item.category, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 21\n        }\n      }, \" \", item.account, \"  \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 21\n        }\n      }, \" \", item.amount, \" \"));\n    }))), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 9\n      }\n    }, \" Final Credit \"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: () => this.newcreditlist(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 9\n      }\n    }, \"Update\"), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"myTable\",\n      id: \"T\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 13\n      }\n    }, \"Housing\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 13\n      }\n    }, \"Insurance\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 13\n      }\n    }, \"Salary\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 13\n      }\n    }, \"clothing\")), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 11\n      }\n    }, this.state.fcredit.map(item => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 21\n        }\n      }, \" \", item.housing, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 21\n        }\n      }, \" \", item.insurance, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 21\n        }\n      }, \" \", item.salary, \"  \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 21\n        }\n      }, \" \", item.clothing, \" \"));\n    }))), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 9\n      }\n    }, \" Cheque \"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: () => this.editchequelist(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 9\n      }\n    }, \"Update\"), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"myTable\",\n      id: \"T\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 13\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 13\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 13\n      }\n    }, \"Account Type\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 13\n      }\n    }, \"Amount Transacted\")), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 11\n      }\n    }, this.state.tcheque.map(item => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.transaction_id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 21\n        }\n      }, \" \", item.timestamp, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 21\n        }\n      }, \" \", item.category, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 21\n        }\n      }, \" \", item.account, \"  \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 21\n        }\n      }, \" \", item.amount, \" \"));\n    }))), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 9\n      }\n    }, \" Savings \"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: () => this.editsavingslist(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 9\n      }\n    }, \"Update\"), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"myTable\",\n      id: \"T\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 13\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 13\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 13\n      }\n    }, \"Account Type\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 13\n      }\n    }, \"Amount Transacted\")), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 11\n      }\n    }, this.state.tsavings.map(item => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.transaction_id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 21\n        }\n      }, \" \", item.timestamp, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 21\n        }\n      }, \" \", item.category, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 21\n        }\n      }, \" \", item.account, \"  \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 21\n        }\n      }, \" \", item.amount, \" \"));\n    }))), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 9\n      }\n    }, \" Visualisation of Accounts\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"visualisation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      id: \"barChart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/FinTech/Dev 1/day2/Final_Assignment/src/App.js"],"names":["React","logo","d3","sortTable","n","table","rows","switching","i","x","y","shouldSwitch","dir","switchcount","document","getElementById","length","getElementsByTagName","innerHTML","toLowerCase","parentNode","insertBefore","App","Component","constructor","props","state","accounts","customers","transactions","tcredit","tcheque","tsavings","fcredit","fsavings","fcheque","callAPIServer","fetch","then","res","text","setState","JSON","parse","catch","err","componentDidMount","componentDidUpdate","forEach","c","balance","replace","b","amount","generateGraph","showChart","editcreditlist","creditlist","updatedlist","Array","item","account","push","newcreditlist","clothing","utilities","recreation","groceries","salary","housing","insurance","category","Number","editsavingslist","editchequelist","tabling","count","a","timestamp","console","log","margin","top","right","bottom","left","width","height","svg","select","attr","append","selectAll","remove","scaleBand","range","scaleLinear","domain","map","details","max","data","enter","d","bandwidth","call","axisBottom","axisLeft","maxVal","render","id","first_name","last_name","email","gender","transaction_id"],"mappings":"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","sourcesContent":["/* Demo for FinTech@SG Course \nGeneration of Charts Based on JSON data from Server\nAuthor: Prof Bhojan Anand */\n//Install d3.js:   npm install d3 --save\nimport React from \"react\";\nimport logo from \"./brand-logo.png\";\nimport * as d3 from 'd3';\n\nimport \"./App.css\";\n\n\nfunction sortTable(n) {\n  var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;\n  table = document.getElementById(\"myTable\");\n  switching = true;\n  //Set the sorting direction to ascending:\n  dir = \"asc\"; \n  /*Make a loop that will continue until\n  no switching has been done:*/\n  while (switching) {\n    //start by saying: no switching is done:\n    switching = false;\n    rows = table.rows;\n    /*Loop through all table rows (except the\n    first, which contains table headers):*/\n    for (i = 1; i < (rows.length - 1); i++) {\n      //start by saying there should be no switching:\n      shouldSwitch = false;\n      /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n      x = rows[i].getElementsByTagName(\"TD\")[n];\n      y = rows[i + 1].getElementsByTagName(\"TD\")[n];\n      /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n      if (dir == \"asc\") {\n        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n          //if so, mark as a switch and break the loop:\n          shouldSwitch= true;\n          break;\n        }\n      } else if (dir == \"desc\") {\n        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n          //if so, mark as a switch and break the loop:\n          shouldSwitch = true;\n          break;\n        }\n      }\n    }\n    if (shouldSwitch) {\n      /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\n      switching = true;\n      //Each time a switch is done, increase this count by 1:\n      switchcount ++;      \n    } else {\n      /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n      if (switchcount == 0 && dir == \"asc\") {\n        dir = \"desc\";\n        switching = true;\n      }\n    }\n  }\n}\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      accounts: [],\n      customers: [],\n      transactions: [],\n      tcredit: [],\n      tcheque: [],\n      tsavings: [],\n      fcredit: [],\n      fsavings: [],\n      fcheque: []\n     }\n \n  }\n\n  callAPIServer() {\n    // when component mounted, start a GET request\n    // to specified URL\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/accounts\")\n      .then(res => res.text())\n      .then(res => this.setState({ accounts: JSON.parse(res) }))\n      .catch(err => err);\n\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/customers\")\n      // when we get a response map the body to json\n      .then(res => res.text())\n      .then(res => this.setState({ customers: JSON.parse(res) }))\n      .catch(err => err);\n\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/transactions\")\n      // when we get a response map the body to json\n      .then(res => res.text())\n      .then(res => this.setState({ transactions: JSON.parse(res) }))\n      .catch(err => err);\n\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/transactions\")\n      // when we get a response map the body to json\n      .then(res => res.text())\n      .then(res => this.setState({ tcredit: JSON.parse(res) }))\n      .catch(err => err);\n\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/transactions\")\n      // when we get a response map the body to json\n      .then(res => res.text())\n      .then(res => this.setState({ tcheque: JSON.parse(res) }))\n      .catch(err => err);\n\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/transactions\")\n      // when we get a response map the body to json\n      .then(res => res.text())\n      .then(res => this.setState({ tsavings: JSON.parse(res) }))\n      .catch(err => err);\n\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/transactions\")\n      // when we get a response map the body to json\n      .then(res => res.text())\n      .then(res => this.setState({ fcredit: JSON.parse(res) }))\n      .catch(err => err);\n\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/transactions\")\n      // when we get a response map the body to json\n      .then(res => res.text())\n      .then(res => this.setState({ fcheque: JSON.parse(res) }))\n      .catch(err => err);\n\n    fetch(\"https://f92c6b35-d121-4c8a-987b-81217155297f.mock.pstmn.io/transactions\")\n      // when we get a response map the body to json\n      .then(res => res.text())\n      .then(res => this.setState({ fsavings: JSON.parse(res) }))\n      .catch(err => err);\n    }\n  \n  componentDidMount() {\n    // react lifecycle method componentDidMount()\n    //will execute the callAPIserver() method after the component mounts.\n    this.callAPIServer();\n  }\n \n\n componentDidUpdate() {\n  \n  /* prepare data */\n  this.state.accounts.forEach(function (c) {\n    c.balance = c.balance.replace(/[^0-9.-]+/g,\"\"); //regular expression to convert currency to Numeric form\n  });\n  \n  this.state.transactions.forEach(function (b) {\n    b.amount = b.amount.replace(/[^0-9.-]+/g,\"\"); //regular expression to convert currency to Numeric form\n  });\n\n  this.state.tcredit.forEach(function (b) {\n    b.amount = b.amount.replace(/[^0-9.-]+/g,\"\"); //regular expression to convert currency to Numeric form\n  });\n  \n  this.state.tcheque.forEach(function (b) {\n    b.amount = b.amount.replace(/[^0-9.-]+/g,\"\"); //regular expression to convert currency to Numeric form\n  });\n\n  this.state.tsavings.forEach(function (b) {\n    b.amount = b.amount.replace(/[^0-9.-]+/g,\"\"); //regular expression to convert currency to Numeric form\n  });\n\n  \n  this.generateGraph();  //based on previous d3.js exampls\n  this.showChart();  //improved version way to chart\n\n}\n\neditcreditlist(){\n  const creditlist = [...this.state.tcredit];\n  const updatedlist = new Array();\n  creditlist.forEach(function(item){\n    if(item.account == \"credit\"){\n      updatedlist.push(item);\n    }\n  });\n  this.setState({tcredit: updatedlist});\n}\n\nnewcreditlist(){\n  const creditlist = [...this.state.tcredit];\n  const updatedlist = [{account: \"credit\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}];\n  creditlist.forEach(function(item){\n    if(item.category == \"clothing\"){\n      updatedlist[0].clothing = Number(updatedlist[0].clothing) + Number(item.amount);  \n    }\n    else if(item.category == \"utilities\"){\n      updatedlist[0].utilities = Number(updatedlist[0].utilities) + Number(item.amount);\n    }\n    else if(item.category == \"recreation\"){\n      updatedlist[0].recreation = Number(updatedlist[0].recreation) + Number(item.amount);\n    }\n    else if(item.category == \"groceries\"){\n      updatedlist[0].groceries = Number(updatedlist[0].groceries) + Number(item.amount);\n    }\n    else if(item.category == \"salary\"){\n      updatedlist[0].salary = Number(updatedlist[0].salary) + Number(item.amount);\n    }\n    else if(item.category == \"housing\"){\n      updatedlist[0].housing = Number(updatedlist[0].housing) + Number(item.amount);\n    }\n    else if(item.category == \"insurance\"){\n      updatedlist[0].insurance = Number(updatedlist[0].insurance) + Number(item.amount);\n    }\n  });\n  this.setState({fcredit: updatedlist});\n\n  //for(var i=0; i<tcredit.length ;i++){\n  //  var num = Number(tfinal[1].tcredit[i][2]) + Number(tcredit[i][3]);\n  //}\n}\n\neditsavingslist(){\n  const creditlist = [...this.state.tsavings];\n  const updatedlist = new Array();\n  creditlist.forEach(function(item){\n    if(item.account == \"savings\"){\n      updatedlist.push(item);\n    }\n  });\n  this.setState({tsavings: updatedlist});\n\n}\n\neditchequelist(){\n  const creditlist = [...this.state.tcheque];\n  const updatedlist = new Array();\n  creditlist.forEach(function(item){\n    if(item.account == \"cheque\"){\n      updatedlist.push(item);\n    }\n  });\n  this.setState({tcheque: updatedlist});\n\n}\n\ntabling(){\n\n  var tcredit = [];\n  var count = 0;\n  this.state.transactions.forEach(function(a){\n    if(a.account== \"credit\"){\n      tcredit[count] = new Array(a.timestamp, a.category, a.account, a.amount);\n      count++;\n  }\n  });\n  console.log(tcredit);\n\n  var tsavings = [];\n  var count = 0;\n  this.state.transactions.forEach(function(a){\n    if(a.account== \"savings\"){\n      tsavings[count] = new Array(a.timestamp, a.category, a.account, a.amount);\n      count++;\n  }\n  });\n  console.log(tsavings); \n\n  var tcheque = [];\n  var count = 0;\n  this.state.transactions.forEach(function(a){\n    if(a.account== \"cheque\"){\n      tcheque[count] = new Array(a.timestamp, a.category, a.account, a.amount);\n      count++;\n  }\n  });\n  console.log(tcheque);   \n/*\n  console.log(\"HIHIHIHIHIHIHIH\");\n  console.log(this.state.final);\n\n  //let a = this.state.final.concat({account: \"credit\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"});\n  //a.push({account: \"credit\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"},{account: \"cheque\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}, {account: \"savings\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}); \n  this.setState({final: [...this.state.final, ...[1,2,3]]});\n\n  //this.state.final.push({account: \"credit\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"},{account: \"cheque\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}, {account: \"savings\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"});\n  \n  console.log(\"BYEBYEBYEBYEYBEYBEYBY\");\n  console.log(this.state.final);\n*/\n  \n/*\n  var x = this.state.tcredit[0][3];\n  console.log(\"this is amount spent on housing\" + x);\n\n  \n  var tfinal = [{account: \"cheque\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}, {account: \"credit\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}, {account: \"savings\", clothing: \"0\", utilities: \"0\", recreation: \"0\", groceries: \"0\", salary: \"0\", housing: \"0\", insurance: \"0\"}];\n  \n  var a = tcredit[0][3];\n  console.log(a);\n    //console.log(tcredit[0][3]);\n  console.log(Number(tfinal[1].tcredit[0][2]));\n  \n  for(var i=0; i<tcredit.length ;i++){\n    var num = \n    Number(tfinal[1].tcredit[i][2]) \n    + Number(tcredit[i][3]);\n    tfinal[1].tcredit[i][2] = num.toString();\n  }\n  for(var i=0; i<tcheque.length ;i++){\n    var num = Number(tfinal[0].tcheque[i][2]) + tcheque[i][3];\n    tfinal[0].tcheque[i][2] = num.toString();\n  }\n  for(var i=0; i<tsavings.length ;i++){\n    var num = Number(tfinal[2].tsavings[i][2]) + tsavings[i][3];\n    tfinal[2].tsavings[i][2] = num.toString();\n  }\n  console.log(tfinal);\n\n*/\n\n}\n\nshowChart() {\n\n  \n  const margin = { top: 50, right: 50, bottom: 50, left: 50 };\n  var width = 1000 - margin.left - margin.right;\n  var height = 500 - margin.top - margin.bottom;\n  var svg = d3.select(\"#barChart\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n  \n  svg.selectAll(\"*\").remove();\n\n  var x = d3.scaleBand().range([0, width]);\n  var y = d3.scaleLinear().range([height, 0]);\n\n  x.domain(this.state.accounts.map(details => details.account));\n  y.domain([0, d3.max(this.state.accounts.map(details => details.balance))]);\n\n\n\n  svg.selectAll(\".bar\")\n    .data(this.state.accounts)\n    .enter()\n    .append(\"rect\")\n    .attr(\"class\", \"bar\")\n    .attr(\"x\", d => x(d.account))\n    .attr(\"width\", x.bandwidth() - 10)\n    .attr(\"y\", d => y(d.balance))\n    .attr(\"height\", d => height - y(d.balance));\n\n  svg.append(\"g\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.axisBottom(x))\n\n  svg.append(\"g\")\n    .call(d3.axisLeft(y));\n}\n\n  generateGraph() {\n\n    var maxVal = d3.max(this.state.accounts.map(details => Number(details.balance)));\n    console.log(maxVal);\n    var svg = d3\n      .select(\"#visualisation\")\n      .append(\"svg\")\n      .attr(\"width\", 500)\n      .attr(\"height\", 200);\n\n    svg\n      .selectAll(\"rect\")\n      .data(this.state.accounts)\n      .enter()\n      .append(\"rect\")\n      .attr(\"transform\", function (d, i) {\n        return \"translate(\" + 60 + \",\" + i * 25 + \")\";\n      })\n      .attr(\"fill\", \"blue\")\n      .attr(\"height\", 20)\n      .attr(\"width\", function (d) {\n        return d.balance /maxVal * 500 + \"px\";\n      });\n      \n    svg\n      .selectAll(\"text\")\n      .data(this.state.accounts)\n      .enter()\n      .append(\"text\")\n      .attr(\"transform\", function (d, i) {\n        return \"translate(0,\" + Number(i * 25 + 15) + \")\";\n      })\n      .attr(\"fill\", \"red\")\n      .text(function (d) {\n        return d.account;\n      });\n      \n  \n} \n\n\n  render() {\n\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">NUSmoney App+</h1>\n        </header>\n\n        <h2> Accounts </h2>\n        <table className=\"myTable\"  id=\"A\">\n        <tr>\n        <th  >Account Type</th>\n        <th   >Balance</th>\n      </tr>\n          <tbody>\n          {this.state.accounts.map((item) => {\n            return (\n              <tr key={item.id}>\n                <td> {item.account} </td>\n                <td> {item.balance} </td>\n              </tr>\n            );\n          })}\n          </tbody>\n        </table>\n\n\n        <h2> Customers </h2>    \n        <table className=\"myTable\"  id=\"C\">\n        <tr>\n        <th >First Name</th>\n        <th >Last Name</th>\n        <th >Email</th>\n        <th >Gender</th>\n      </tr>\n          <tbody>\n          {this.state.customers.map((item) => {\n            return (\n              <tr key={item.id}>\n                  <td> {item.first_name} </td>\n                  <td> {item.last_name} </td>\n                  <td> {item.email}  </td>\n                  <td> {item.gender} </td>\n              </tr>\n            );\n          })}\n          </tbody>\n        </table>\n\n        <h2> Transactions </h2>\n        <table className=\"myTable\" id=\"T\">\n          <tr>\n            <th >Date</th>\n            <th >Category</th>\n            <th >Account Type</th>\n            <th >Amount Transacted</th>\n          </tr>\n          <tbody>\n            {this.state.transactions.map((item) => {\n              return (\n                <tr key={item.transaction_id}>\n                    <td> {item.timestamp} </td>\n                    <td> {item.category} </td>\n                    <td> {item.account}  </td>\n                    <td> {item.amount} </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n\n        \n        <h2> Credit </h2>\n        <button className=\"btn\"\n                onClick={() => this.editcreditlist()}>\n                      Update\n        </button>\n        <table className=\"myTable\" id=\"T\">\n          <tr>\n            <th >Date</th>\n            <th >Category</th>\n            <th >Account Type</th>\n            <th >Amount Transacted</th>\n          </tr>\n          <tbody>\n            {this.state.tcredit.map((item) => {\n              return (\n                <tr key={item.transaction_id}>\n                    <td> {item.timestamp} </td>\n                    <td> {item.category} </td>\n                    <td> {item.account}  </td>\n                    <td> {item.amount} </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n\n        <h2> Final Credit </h2>\n        <button className=\"btn\"\n                onClick={() => this.newcreditlist()}>\n                      Update\n        </button>\n        <table className=\"myTable\" id=\"T\">\n          <tr>\n            <th >Housing</th>\n            <th >Insurance</th>\n            <th >Salary</th>\n            <th >clothing</th>\n          </tr>\n          <tbody>\n            {this.state.fcredit.map((item) => {\n              return (\n                <tr key={item.account}>\n                    <td> {item.housing} </td>\n                    <td> {item.insurance} </td>\n                    <td> {item.salary}  </td>\n                    <td> {item.clothing} </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n\n        <h2> Cheque </h2>\n        <button className=\"btn\"\n                onClick={() => this.editchequelist()}>\n                      Update\n        </button>\n        <table className=\"myTable\" id=\"T\">\n          <tr>\n            <th >Date</th>\n            <th >Category</th>\n            <th >Account Type</th>\n            <th >Amount Transacted</th>\n          </tr>\n          <tbody>\n            {this.state.tcheque.map((item) => {\n              return (\n                <tr key={item.transaction_id}>\n                    <td> {item.timestamp} </td>\n                    <td> {item.category} </td>\n                    <td> {item.account}  </td>\n                    <td> {item.amount} </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n\n        <h2> Savings </h2>\n        <button className=\"btn\"\n                onClick={() => this.editsavingslist()}>\n                      Update\n        </button>\n        <table className=\"myTable\" id=\"T\">\n          <tr>\n            <th >Date</th>\n            <th >Category</th>\n            <th >Account Type</th>\n            <th >Amount Transacted</th>\n          </tr>\n          <tbody>\n            {this.state.tsavings.map((item) => {\n              return (\n                <tr key={item.transaction_id}>\n                    <td> {item.timestamp} </td>\n                    <td> {item.category} </td>\n                    <td> {item.account}  </td>\n                    <td> {item.amount} </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n\n\n        <h2> Visualisation of Accounts</h2>\n        <div id=\"visualisation\">\n            <svg id=\"barChart\"></svg>\n          </div>\n      </div>\n\n\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}